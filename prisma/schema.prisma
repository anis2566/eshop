// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  clerkId String @unique
  name String
  email String
  imageUrl String
  role String @default("user")

  seller Seller?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Seller {
  id String @id @default(uuid())
  name String
  email String
  imageUrl String
  phone String
  address String

  paymentNumber String
  accountType String

  userId String @unique
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Brand {
  id String @id @default(uuid())
  name String @unique
  imageUrl String

  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id String @id @default(uuid())
  name String
  description String? @db.Text
  imageUrl String
  tags String[] @default([])

  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id String @id @default(uuid())
  name  String
  description String @db.Text
  featureImageUrl String
  images  String[] @default([])
  totalStock  Int?
  price Int
  discountPrice Int?
  sellerPrice Int?
  status  String @default("DRAFT")

  featureTitle String?
  startDeal DateTime?
  endDeal DateTime?
  
  genre String[]
  colors String[] @default([])

  categoryId String
  category  Category @relation(fields: [categoryId], references: [id])

  brandId String
  brand  Brand @relation(fields: [brandId], references: [id])

  stocks  Stock[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Stock {
  id String @id @default(uuid())
  stock Int
  size  String
  color String?

  productId String
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Coupon {
  id String @id @default(uuid())
  name String
  code String
  imageUrl String?
  value Int
  startDate DateTime
  expiryDate DateTime
  status String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


